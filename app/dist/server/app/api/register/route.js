"use strict";(()=>{var e={};e.id=569,e.ids=[569],e.modules={1185:e=>{e.exports=require("mongoose")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},3751:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>y,originalPathname:()=>x,patchFetch:()=>w,requestAsyncStorage:()=>m,routeModule:()=>g,serverHooks:()=>v,staticGenerationAsyncStorage:()=>h,staticGenerationBailout:()=>q});var s={};t.r(s),t.d(s,{POST:()=>d});var o=t(5419),a=t(9108),n=t(9678),i=t(4852),u=t(8070),c=t(8944),p=t(6521),l=t.n(p);async function d(e){try{let{name:r,email:t,password:s,avatar:o}=await e.json();if(await c.Z.findOne({email:t}))return u.Z.json({error:"User already exists. Please log in."},{status:400});let a=await l().genSalt(10),n=await l().hash(s,a);return await c.Z.create({name:r,email:t,password:n,avatar:o}),u.Z.json({message:"User registered successfully!"},{status:201})}catch(e){return console.log(e),u.Z.json({error:e},{status:500})}}(0,i.$)();let g=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/register/route",pathname:"/api/register",filename:"route",bundlePath:"app/api/register/route"},resolvedPagePath:"C:\\Users\\subha\\OneDrive\\Desktop\\code\\Revision v2\\squashpro\\app\\src\\app\\api\\register\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:m,staticGenerationAsyncStorage:h,serverHooks:v,headerHooks:y,staticGenerationBailout:q}=g,x="/api/register/route";function w(){return(0,n.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:h})}},8944:(e,r,t)=>{t.d(r,{Z:()=>n});var s=t(1185),o=t.n(s);let a=new(o()).Schema({name:{type:String,required:[!0,"Name is required"]},email:{type:String,required:[!0,"Email is required"],unique:[!0,"Email already exists"]},password:{type:String},avatar:{type:String}},{timestamps:!0}),n=o().models.users||o().model("users",a)},4852:(e,r,t)=>{t.d(r,{$:()=>a});var s=t(1185),o=t.n(s);async function a(){try{o().connect(process.env.DB_URI);let e=o().connection;e.on("connected",()=>{console.log("MongoDB connected")}),e.on("error",()=>{console.log("MongoDB connection error"),process.exit()})}catch(e){console.log(e)}}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[638,206,521],()=>t(3751));module.exports=s})();