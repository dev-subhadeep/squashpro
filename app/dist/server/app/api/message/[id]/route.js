"use strict";(()=>{var e={};e.id=688,e.ids=[688],e.modules={1185:e=>{e.exports=require("mongoose")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3433:(e,t,o)=>{o.r(t),o.d(t,{headerHooks:()=>v,originalPathname:()=>y,patchFetch:()=>f,requestAsyncStorage:()=>l,routeModule:()=>u,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m,staticGenerationBailout:()=>h});var s={};o.r(s),o.d(s,{GET:()=>d});var r=o(5419),n=o(9108),a=o(9678),i=o(9913),c=o(4852),p=o(8070);async function d(e,t){try{let e=t.params.id,o=await i.Z.find({conversationId:e});return p.Z.json(o)}catch(e){return p.Z.json({error:e.message},{status:500})}}(0,c.$)();let u=new r.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/message/[id]/route",pathname:"/api/message/[id]",filename:"route",bundlePath:"app/api/message/[id]/route"},resolvedPagePath:"C:\\Users\\subha\\OneDrive\\Desktop\\code\\Revision v2\\squashpro\\app\\src\\app\\api\\message\\[id]\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:g,headerHooks:v,staticGenerationBailout:h}=u,y="/api/message/[id]/route";function f(){return(0,a.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},9913:(e,t,o)=>{o.d(t,{Z:()=>a});var s=o(1185),r=o.n(s);let n=new(r()).Schema({conversationId:{type:r().Types.ObjectId,ref:"conversations"},sender:{type:r().Types.ObjectId,ref:"users"},text:{type:String}},{timestamps:!0}),a=r().models.messages||r().model("messages",n)},4852:(e,t,o)=>{o.d(t,{$:()=>n});var s=o(1185),r=o.n(s);async function n(){try{r().connect(process.env.DB_URI);let e=r().connection;e.on("connected",()=>{console.log("MongoDB connected")}),e.on("error",()=>{console.log("MongoDB connection error"),process.exit()})}catch(e){console.log(e)}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var o=e=>t(t.s=e),s=t.X(0,[638,206],()=>o(3433));module.exports=s})();