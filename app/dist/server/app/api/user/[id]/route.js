"use strict";(()=>{var e={};e.id=244,e.ids=[244],e.modules={1185:e=>{e.exports=require("mongoose")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3992:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>v,originalPathname:()=>y,patchFetch:()=>q,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m,staticGenerationBailout:()=>h});var o={};t.r(o),t.d(o,{GET:()=>d});var n=t(5419),a=t(9108),s=t(9678),i=t(8944),u=t(4852),c=t(8070);async function d(e,r){try{let{id:e}=r.params,t=await i.Z.findOne({_id:e}).select("_id email name avatar");return c.Z.json(t)}catch(e){return c.Z.json({error:e.message},{status:500})}}(0,u.$)();let p=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/user/[id]/route",pathname:"/api/user/[id]",filename:"route",bundlePath:"app/api/user/[id]/route"},resolvedPagePath:"C:\\Users\\subha\\OneDrive\\Desktop\\code\\Revision v2\\squashpro\\app\\src\\app\\api\\user\\[id]\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:g,headerHooks:v,staticGenerationBailout:h}=p,y="/api/user/[id]/route";function q(){return(0,s.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},8944:(e,r,t)=>{t.d(r,{Z:()=>s});var o=t(1185),n=t.n(o);let a=new(n()).Schema({name:{type:String,required:[!0,"Name is required"]},email:{type:String,required:[!0,"Email is required"],unique:[!0,"Email already exists"]},password:{type:String},avatar:{type:String}},{timestamps:!0}),s=n().models.users||n().model("users",a)},4852:(e,r,t)=>{t.d(r,{$:()=>a});var o=t(1185),n=t.n(o);async function a(){try{n().connect(process.env.DB_URI);let e=n().connection;e.on("connected",()=>{console.log("MongoDB connected")}),e.on("error",()=>{console.log("MongoDB connection error"),process.exit()})}catch(e){console.log(e)}}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[638,206],()=>t(3992));module.exports=o})();