"use strict";(()=>{var e={};e.id=633,e.ids=[633],e.modules={1185:e=>{e.exports=require("mongoose")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2097:(e,o,n)=>{n.r(o),n.d(o,{headerHooks:()=>h,originalPathname:()=>x,patchFetch:()=>y,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>v,staticGenerationBailout:()=>g});var r={};n.r(r),n.d(r,{GET:()=>p});var t=n(5419),s=n(9108),a=n(9678),i=n(7988),c=n(4852),u=n(8070);async function p(e,o){try{let e=o.params.id,n=await i.Z.find({members:{$in:e}});return u.Z.json(n)}catch(e){return u.Z.json({error:e.message},{status:500})}}(0,c.$)();let d=new t.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/conversation/[id]/route",pathname:"/api/conversation/[id]",filename:"route",bundlePath:"app/api/conversation/[id]/route"},resolvedPagePath:"C:\\Users\\subha\\OneDrive\\Desktop\\code\\Revision v2\\squashpro\\app\\src\\app\\api\\conversation\\[id]\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:l,staticGenerationAsyncStorage:v,serverHooks:m,headerHooks:h,staticGenerationBailout:g}=d,x="/api/conversation/[id]/route";function y(){return(0,a.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:v})}},7988:(e,o,n)=>{n.d(o,{Z:()=>a});var r=n(1185),t=n.n(r);let s=new(t()).Schema({members:{type:Array}},{timestamps:!0}),a=t().models.conversations||t().model("conversations",s)},4852:(e,o,n)=>{n.d(o,{$:()=>s});var r=n(1185),t=n.n(r);async function s(){try{t().connect(process.env.DB_URI);let e=t().connection;e.on("connected",()=>{console.log("MongoDB connected")}),e.on("error",()=>{console.log("MongoDB connection error"),process.exit()})}catch(e){console.log(e)}}}};var o=require("../../../../webpack-runtime.js");o.C(e);var n=e=>o(o.s=e),r=o.X(0,[638,206],()=>n(2097));module.exports=r})();